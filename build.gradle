buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE' apply false
}

ext {
    set('springCloudVersion', "Greenwich.SR2")
    set('springBootVersion', "2.1.5.RELEASE")
    guavaVersion = "27.1-jre"
}

subprojects {

    group = 'me.liqiu'
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = '1.8'
    version '1.0'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
//        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenCentral()
    }

    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-devtools'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

configure(subprojects.findAll { it.name.startsWith("es-") }) {
    dependencies {
        implementation "com.google.guava:guava:${guavaVersion}"
        implementation "org.springframework.boot:spring-boot-starter-data-elasticsearch"
    }
}

configure(subprojects.findAll { it.name.startsWith("kafka-")}) {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }
}

configure(subprojects.findAll { it.name.endsWith("server")}) {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    }
}






